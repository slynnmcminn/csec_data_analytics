import sys
sys.path.append('C:/Users/cyberarena/Documents/GitHub/csec_data_analytics')

import os
import django

# Set up the Django environment
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'csec_data_analytics.settings')
django.setup()

# Now you can import your Django models and use them
from csec_data_analytics_app.models import Vulnerability
def run_queries():
    vulnerability_count = Vulnerability.objects.count()
    print(f"Total number of vulnerabilities: {vulnerability_count}")

    # Example for attack vector count
    get_attack_vector_count('NETWORK')
    get_attack_vector_count('PHYSICAL')

    # Example for top products with known exploits
    get_top_products_with_known_exploit(10)

def get_attack_vector_count(attack_vector):
    attack_vector_count = Vulnerability.objects(attack_vector=attack_vector).count()
    print(f"There are {attack_vector_count} vulnerabilities with the attack vector {attack_vector}.")

def get_top_products_with_known_exploit(top_n):
    pipeline = [
        {"$unwind": "$vulnerable_products"},
        {"$match": {"known_exploit": True}},
        {"$group": {
            "_id": {
                "vendor": "$vulnerable_products.vendor",
                "product": "$vulnerable_products.product"
            },
            "count": {"$sum": 1}
        }},
        {"$sort": {"count": -1}},
        {"$limit": top_n}
    ]

    # Run the aggregation
    results = list(Vulnerability.objects.aggregate(pipeline))  # Pass the pipeline directly

    # Print the results
    for i, result in enumerate(results):
        print(f"{i+1}: {result['_id']['vendor']} {result['_id']['product']} has {result['count']} known exploits")

if __name__ == "__main__":
    run_queries()
