from csec_data_analytics_app.models import MEVulnerability

def get_physical_attack_vector_count():
    # Placeholder logic to parse the 'cvss_vector' field
    return MEVulnerability.objects(__raw__={'cvss_vector': {'$regex': 'AV:P'}}).count()

def get_top_products_with_known_exploit(top_n):
    # Adjust field names to match your model structure
    pipeline = [
        {"$unwind": "$cpe_configurations"},  # Assuming the products are listed under 'cpe_configurations'
        {"$match": {"known_exploit": True}},  # Ensure this field exists in MEVulnerability
        {"$group": {
            "_id": {
                "vendor": "$vendor_field",  # Replace 'vendor_field' with the actual field name
                "product": "$product_field"  # Replace 'product_field' with the actual field name
            },
            "count": {"$sum": 1}
        }},
        {"$sort": {"count": -1}},
        {"$limit": top_n}
    ]

    # Run the aggregation and return the results
    results = list(MEVulnerability.objects().aggregate(*pipeline))
    return results

