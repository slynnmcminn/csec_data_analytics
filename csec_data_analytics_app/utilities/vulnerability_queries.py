def vulnerability_get_attack_vector_count(attack_vector):
    """
    Get the count of vulnerabilities with the specified attack vector.

    Args:
    - attack_vector (str): The attack vector to count.

    Returns:
    - int: The count of vulnerabilities.
    """
    attack_vector_count = Vulnerability.objects(attack_vector=attack_vector).count()
    return attack_vector_count

def vulnerability_get_top_products_with_known_exploit(top_n):
    """
    Get the top products with known exploits.

    Args:
    - top_n (int): The number of top products to retrieve.

    Returns:
    - list: A list of dictionaries containing vendor, product, and count.
    """
    # Define the aggregation pipeline
    pipeline = [
        {
            "$group": {
                "_id": {
                    "vendor": "$vendor",
                    "product": "$product"
                },
                "count": {"$sum": 1}
            }
        },
        {
            "$sort": {"count": -1}
        },
        {
            "$limit": top_n
        },
        {
            "$project": {
                "_id": 0,
                "vendor": "$_id.vendor",
                "product": "$_id.product",
                "count": 1
            }
        }
    ]

    # Execute the aggregation pipeline using the Vulnerability collection
    results = list(Vulnerability.objects.aggregate(*pipeline))

    return results
